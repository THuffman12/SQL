--#1.Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT FirstName, LastName, Customerid, Country
FROM customers
WHERE Country <> 'USA'
GROUP BY FirstName;

--#2.Show only the Customers from Brazil.
SELECT FirstName, LastName, Customerid, Country 
FROM customers
WHERE Country = 'Brazil' 
GROUP BY FirstName;

--#3.Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT customers.FirstName, customers.LastName, invoices.BillingCountry
,invoices.InvoiceId, invoices.InvoiceDate
FROM customers
JOIN invoices
ON invoices.Customerid = customers.Customerid
WHERE invoices.BillingCountry = 'Brazil'
GROUP BY invoices.InvoiceId;

--#4.Show the Employees who are Sales Agents.
SELECT *
FROM employees
WHERE Title = 'Sales Support Agent';

--#5.Find a unique/distinct list of billing countries from the Invoice table.
SELECT distinct BillingCountry
FROM invoices;

--#6.Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT employees.Employeeid, employees.FirstName,employees.LastName, invoices.InvoiceId
FROM employees
JOIN customers
ON employees.EmployeeId = customers.SupportRepId

JOIN invoices
ON invoices.CustomerId = customers.CustomerId;

--#7.Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT employees.FirstName, employees.LastName, customers.FirstName, customers.LastName, customers.Country, invoices.Total
FROM employees
JOIN customers
ON employees.EmployeeId = customers.SupportRepId

JOIN invoices
ON customers.CustomerId = invoices.CustomerId;

--#8.How many Invoices were there in 2009?
SELECT COUNT (*)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

--#9.What are the total sales for 2009?
SELECT SUM(Total)
FROM invoices 
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

--#10.Write a query that includes the purchased track name with each invoice line ID.
SELECT tracks.Name, invoice_items.InvoiceId
FROM tracks
JOIN invoice_items
ON tracks.TrackId = invoice_items.TrackId;

--#11.Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT tracks.Name, invoice_items.InvoiceId, artists.Name
FROM tracks
JOIN invoice_items
ON tracks.TrackId = invoice_items.TrackId

JOIN albums
ON albums.ArtistId = tracks.AlbumId

JOIN artists
ON artists.ArtistId = albums.ArtistId;

--#12.Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT (tracks.Name) AS 'TrackName', (albums.Title) AS 'Album' , (media_types.Name)AS 'MediaType', (genres.Name) AS 'Genre'
FROM tracks
JOIN albums
ON tracks.AlbumId = albums.AlbumId

JOIN media_types
ON tracks.MediaTypeId = media_types.MediaTypeId

JOIN genres
ON genres.GenreId = tracks.GenreId;


--#13.Show the total sales made by each sales agent.
SELECT ROUND(SUM(invoices.Total), 2)AS 'Total Sales', employees.FirstName, employees.LastName
FROM employees
JOIN customers 
ON employees.Employeeid = customers.SupportRepId

JOIN invoices
ON customers.CustomerId = invoices.InvoiceId

WHERE employees.Title = 'Sales Support Agent'
GROUP BY employees.FirstName;


--#14.Which sales agent made the most dollars in sales in 2009? 
SELECT ROUND(SUM(invoices.Total), 2)AS 'Total Sales', employees.FirstName, employees.LastName
FROM employees
JOIN customers 
ON employees.Employeeid = customers.SupportRepId

JOIN invoices
ON customers.CustomerId = invoices.InvoiceId

WHERE employees.Title = 'Sales Support Agent'
AND invoices.InvoiceDate LIKE '2009%'
GROUP BY employees.FirstName
ORDER BY ROUND(SUM(invoices.Total)) DESC LIMIT 1;
